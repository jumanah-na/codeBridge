<?php

class CodeExecutor {
    private $language;
    private $code;
    private $extension;
    private $filePath;

    public function __construct($language, $code) {
        $this->language = strtolower($language);
        $this->code = $code;
        $this->determineExtension();
    }

    private function determineExtension() {
        if ($this->language == "python") {
            $this->extension = "py";
        } elseif ($this->language == "java") {
            $this->extension = "java";
        } else {
            echo "Unsupported language: {$this->language}";
            exit;
        }
    }

    public function execute() {
        if ($this->language == "java") {
            $this->handleJavaCode();
        } elseif ($this->language == "python") {
            $this->handlePythonCode();
        }
    }

    private function handleJavaCode() {
        $className = $this->extractClassName();
        $this->filePath = "temp/" . $className . "." . $this->extension;
        $this->writeToFile();
        $this->compileJava();
    }
    // ensure that the code wrriten by the user includes the correct syntax which is public class .. etc to enable compling the code
    private function extractClassName() {
        if (preg_match('/public class (\w+)/', $this->code, $matches)) {
            return $matches[1];
        } else {
            echo "Error: No public class name found in the Java code.";
            exit;
        }
    }

    private function compileJava() {
        /* - exec is method to excute extrnal progragram which is here the java complier
           - compileOutput is array that the will be filled by exec method with every line from 
        the output that is generated by the java complier
           - compileReturn include the statues of the code, 0 in case success and any other value indicates failure       
        */
        exec("javac {$this->filePath} 2>&1", $compileOutput, $compileReturn);
        if ($compileReturn === 0) {
            /* - shell_exec function  executes terminal commands from within a script and returns the output as a string
              -  $this->extractClassName() dynamically inserts the name of the Java class obtained from 
              -  java -classpath temp  execute the compiled Java class
            */
            $output = shell_exec("java -classpath temp {$this->extractClassName()} 2>&1");
            echo $output;
        } else {
            /* - implode is function used to join elements of an array together into a single string.
               - $compileOutput is array that contain the errorr or any message genertaed by java compiler
            */
            echo "Compilation Error: " . implode("\n", $compileOutput);
        }
    }

    private function handlePythonCode() {
        $this->filePath = $this->generateRandomFilePath();
        $this->writeToFile();
        $this->executePython();
    }

    private function generateRandomFilePath() {
        // random is a uniuqe string to ensure that each file path is unique 
        $random = substr(md5(mt_rand()), 0, 7);
        return "temp/" . $random . "." . $this->extension;
    }

    private function writeToFile() {
        // write the data which is the code wrriten by user to the speceifed file path  
        file_put_contents($this->filePath, $this->code);
    }

    private function executePython() {
        $command = "python {$this->filePath} 2>&1";
        $output = shell_exec($command);
        echo $output;
    }
}

// Usage
$language = $_POST['language'];
$code = $_POST['code'];
$executor = new CodeExecutor($language, $code);
$executor->execute();